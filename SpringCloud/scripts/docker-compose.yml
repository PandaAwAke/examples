version: '3.8'

services:
  mysql:
    image: mysql:8.0.26
    container_name: mysql
    ports:
      - "3306:3306"
    restart: always
    volumes:
      - E:\workspace\mysql\data:/var/lib/mysql
      - E:\workspace\mysql\log:/var/log/mysql
#      - ./mysql/data:/var/lib/mysql
#      - ./mysql/log:/var/log/mysql
    environment:
      MYSQL_ROOT_PASSWORD: 123456
    networks:
      - my-net

  nacos:
    image: nacos/nacos-server:v2.4.2-slim
    container_name: nacos
    env_file: nacos/custom.env
    ports:
      - "8848:8848"
      - "9848:9848"
      - "9849:9849"
    restart: always
    networks:
      - my-net

  sentinel:
    build:
      context: ./sentinel
      dockerfile: Dockerfile
    image: sentinel-dashboard:1.8.8
    ports:
      - "9000:8080"
    restart: always
    networks:
      - my-net

  seata:
    build:
      context: ./seata
      dockerfile: Dockerfile
    image: seata-server:2.0.0
    ports:
      - "7099:7099"
      - "8099:8099"
    restart: always
    privileged: true
    networks:
      - my-net

  nginx:
    image: nginx:1.27-alpine-slim
    container_name: nginx
    ports:
      - "18080:18080"
      - "18081:18081"
      - "18082:18082"
    restart: always
    volumes:
      - ./nginx/conf/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/html:/usr/share/nginx/html

    # 下面的配置是给 nginx 将请求转发到宿主机用的，容器内使用 http://host.docker.internal 即可访问宿主机
    extra_hosts:
      - "host.docker.internal:host-gateway"

networks:
  my-net:
    driver: bridge
